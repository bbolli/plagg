#!/usr/bin/python

"""Reads an OPML file, gets all feeds in it and writes Blosxom entries
corresponding to the items in the feeds."""

# $Id$

import os, sys, getopt, signal

from Plagg import Plagg

PATH = os.path.join(os.getenv('HOME'), 'bblog', 'news')
OPML = os.path.join(PATH, 'news.opml')

def usage(rc):
    print "Usage: plagg [-nhVv] [-t timeout] [opmlfile [newsdir [nickname ...]]]"
    sys.exit(rc)

news = verbose = timeout = 0
try:
    opts, args = getopt.getopt(sys.argv[1:], 'nhVvt:')
except getopt.GetoptError, e:
    print e
    usage(3)
for o, v in opts:
    if o == '-n':
	news = 1
    if o == '-h':
	usage(0)
    elif o == '-V':
	print Plagg.__version__
	sys.exit(0)
    elif o == '-v':
	verbose += 1
    elif o == '-t':
        timeout = int(v)

if timeout and hasattr(signal, 'alarm'):
    signal.signal(signal.SIGALRM, signal.default_int_handler)
    signal.alarm(timeout)

argc = len(args)
if argc == 0:
    plagg = Plagg.Plagg(OPML, PATH)
elif argc == 1:
    plagg = Plagg.Plagg(args[0], PATH)
elif argc == 2:
    plagg = Plagg.Plagg(args[0], args[1])
elif argc >= 3:
    plagg = Plagg.Plagg(args[0], args[1], args[2:])
else:
    usage(3)

plagg.setLogging(verbose)
try:
    plagg.startOPML()
except KeyboardInterrupt:
    pass
if news:
    plagg.newEntries()

sys.exit(plagg.errors and 1 or 0)
