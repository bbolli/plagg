#!/usr/bin/env python3

"""Reads an OPML file, gets all feeds in it and writes Blosxom entries
corresponding to the items in the feeds."""

import argparse
import os
import signal
import sys

from plagglib import plagg


parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument('-d', '--dir', help="the destination directory",
                    default=os.path.join(os.getenv('HOME'), 'bblog', 'news'))
parser.add_argument('-F', '--feed', action='store_true',
                    help="use OPMLFILE as a single feed's URL")
parser.add_argument('-n', '--news', action='store_true',
                    help="write a Latest.txt with new entries")
parser.add_argument('-o', '--old', action='store_true',
                    help="also generate entries older than one week")
parser.add_argument('-v', '--verbose', action='count', default=0,
                    help="increase verbosity (may be repeated)")
parser.add_argument('-f', '--no-footer', action='store_false', dest='footer',
                    help="suppress entry footers", default=True)
parser.add_argument('-t', '--timeout', type=int, default=0,
                    help="global timeout in seconds")
parser.add_argument('-V', '--version', action='store_true',
                    help="display plagg's version")
parser.add_argument('opmlfile', nargs='?',
                    help="the file containing your news feeds")
parser.add_argument('nicknames', nargs='*', help="only update these feeds")

args = parser.parse_args()
if args.version:
    print(plagg.__version__)
    sys.exit(0)
if args.feed and not args.nicknames:
    parser.error("-F must be used with an opmlfile and one nickname")

if args.timeout and hasattr(signal, 'alarm'):
    signal.signal(signal.SIGALRM, signal.default_int_handler)
    signal.alarm(args.timeout)

if not args.opmlfile:
    plagg = plagg.Plagg(os.path.join(args.dir, 'news.opml'))
elif not args.nicknames:
    plagg = plagg.Plagg(args.opmlfile)
else:
    args.old = True
    plagg = plagg.Plagg(args.opmlfile, args.nicknames)

plagg.setConfig(args.dir, args.verbose, args.footer, args.old)
try:
    if args.feed:
        plagg.singleFeed(args.opmlfile, args.nicknames[0])
    else:
        plagg.startOPML()
except KeyboardInterrupt:
    pass
if args.news:
    plagg.newEntries()

sys.exit(plagg.errors and 1 or 0)
